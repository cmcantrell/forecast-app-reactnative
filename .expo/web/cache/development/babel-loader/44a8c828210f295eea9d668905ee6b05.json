{"ast":null,"code":"\"use strict\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nexport var dataStoreRegionKey = \"@settings.savedregion\";\nexport var setData = function setData(key, data) {\n  return _regeneratorRuntime.async(function setData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(\"@AsyncHelper.setData\", key, data);\n\n          if (!(data == null || data == false)) {\n            _context.next = 3;\n            break;\n          }\n\n          return _context.abrupt(\"return\", removeItem(key));\n\n        case 3:\n          _context.prev = 3;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, data));\n\n        case 6:\n          return _context.abrupt(\"return\", true);\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](3);\n          console.log(\"@AsyncHelper.storeData\", _context.t0);\n\n        case 12:\n          return _context.abrupt(\"return\", false);\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[3, 9]], Promise);\n};\nexport var dataStoreWatershedKey = \"@settings.savedwatershed\";\nexport var getData = function getData(key) {\n  var value;\n  return _regeneratorRuntime.async(function getData$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log(\"@AsyncHelper.getData\", key);\n          _context2.prev = 1;\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n        case 4:\n          value = _context2.sent;\n\n          if (!(value != null)) {\n            _context2.next = 7;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", value);\n\n        case 7:\n          _context2.next = 12;\n          break;\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log(\"@AsyncHelper.getData\", _context2.t0);\n\n        case 12:\n          return _context2.abrupt(\"return\", null);\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[1, 9]], Promise);\n};\n\nvar removeItem = function removeItem(key) {\n  return _regeneratorRuntime.async(function removeItem$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          console.log(\"@AsyncHelper.removeItem\", key);\n          _context3.prev = 1;\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.removeItem(key));\n\n        case 4:\n          _context3.next = 9;\n          break;\n\n        case 6:\n          _context3.prev = 6;\n          _context3.t0 = _context3[\"catch\"](1);\n          console.log(\"@AsyncHelper.removeItem\", _context3.t0);\n\n        case 9:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[1, 6]], Promise);\n};","map":{"version":3,"sources":["/Users/clinton/Apps/fc-reactnative/testapp/lib/helper/AsyncHelper.tsx"],"names":["AsyncStorage","dataStoreRegionKey","setData","key","data","console","log","removeItem","setItem","dataStoreWatershedKey","getData","getItem","value"],"mappings":"AAAA;;;AACA,OAAOA,YAAP,MAAyB,2CAAzB;AAEA,OAAO,IAAMC,kBAAkB,GAAG,uBAA3B;AAOP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAOC,GAAP,EAAYC,IAAZ;AAAA;AAAA;AAAA;AAAA;AACnBC,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCH,GAAnC,EAAuCC,IAAvC;;AADmB,gBAEfA,IAAI,IAAI,IAAR,IAAgBA,IAAI,IAAI,KAFT;AAAA;AAAA;AAAA;;AAAA,2CAGRG,UAAU,CAACJ,GAAD,CAHF;;AAAA;AAAA;AAAA;AAAA,2CAMTH,YAAY,CAACQ,OAAb,CAAqBL,GAArB,EAA0BC,IAA1B,CANS;;AAAA;AAAA,2CAOR,IAPQ;;AAAA;AAAA;AAAA;AASfC,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;;AATe;AAAA,2CAWZ,KAXY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;AAcP,OAAO,IAAMG,qBAAqB,GAAG,0BAA9B;AAMP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAOP,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBE,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCH,GAAnC;AADmB;AAAA;AAAA,2CAGKH,YAAY,CAACW,OAAb,CAAqBR,GAArB,CAHL;;AAAA;AAGTS,UAAAA,KAHS;;AAAA,gBAIXA,KAAK,IAAI,IAJE;AAAA;AAAA;AAAA;;AAAA,4CAKJA,KALI;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQfP,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;;AARe;AAAA,4CAUZ,IAVY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;;AAaP,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAOJ,GAAP;AAAA;AAAA;AAAA;AAAA;AACfE,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsCH,GAAtC;AADe;AAAA;AAAA,2CAGLH,YAAY,CAACO,UAAb,CAAwBJ,GAAxB,CAHK;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKXE,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;;AALW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB","sourcesContent":["\"use strict\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport const dataStoreRegionKey = \"@settings.savedregion\";\n\n/**\n * \n * @param key {string}\n * @param data {string}\n */\nexport const setData = async (key, data) => {\n    console.log(\"@AsyncHelper.setData\",key,data);\n    if (data == null || data == false) {\n        return removeItem(key);\n    }\n    try {\n        await AsyncStorage.setItem(key, data);\n        return true;\n    } catch (error) {\n        console.log(\"@AsyncHelper.storeData\", error);\n    }\n    return false;\n};\n\nexport const dataStoreWatershedKey = \"@settings.savedwatershed\";\n\n/**\n * \n * @param key {string}\n */\nexport const getData = async (key) => {\n    console.log(\"@AsyncHelper.getData\",key);\n    try {\n        const value = await AsyncStorage.getItem(key);\n        if (value != null) {\n            return value;\n        }\n    } catch (error) {\n        console.log(\"@AsyncHelper.getData\", error);\n    }\n    return null;\n};\n\nconst removeItem = async (key) => {\n    console.log(\"@AsyncHelper.removeItem\",key);\n    try {\n        await AsyncStorage.removeItem(key)\n    } catch (error) {\n        console.log(\"@AsyncHelper.removeItem\",error);\n    }\n};"]},"metadata":{},"sourceType":"module"}