{"ast":null,"code":"\"use strict\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/clinton/Apps/fc-reactnative/testapp/components/mainScreen/WatershedPicker.tsx\";\n\nimport React from \"react\";\nimport { Picker } from '@react-native-picker/picker';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setWatershed } from \"../../lib/store/actions/waterdata\";\nimport { getWatershedSource } from \"../../lib/helper/Helper\";\n\nvar RegionPicker = function RegionPicker(props) {\n  var pickerStyle = {\n    height: 200,\n    width: \"100%\",\n    marginTop: 80,\n    marginBottom: 40\n  };\n\n  if (props.style != undefined) {\n    pickerStyle = props.style;\n  }\n\n  var itemColor = \"default\";\n\n  if (props.itemStyle != undefined && props.itemStyle.color != undefined) {\n    itemColor = props.itemStyle.color;\n  }\n\n  var dispatch = useDispatch();\n  var region = useSelector(function (state) {\n    return state.waterdata.region;\n  }),\n      watershed = useSelector(function (state) {\n    return state.waterdata.watershed;\n  }),\n      data = useSelector(function (state) {\n    return state.waterdata.source;\n  });\n\n  var getPickerItems = function getPickerItems() {\n    var regionSource = getWatershedSource(data.region, region),\n        items = regionSource.map(function (source, i) {\n      return React.createElement(Picker.Item, {\n        label: source.label,\n        value: source.value,\n        key: i,\n        color: itemColor,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 24\n        }\n      });\n    });\n    return items;\n  };\n\n  return React.createElement(Picker, {\n    selectedValue: watershed,\n    style: {\n      height: 120,\n      width: \"100%\"\n    },\n    itemStyle: {\n      height: 120\n    },\n    onValueChange: function onValueChange(val, i) {\n      dispatch(setWatershed(val));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"-- select a watershed --\",\n    value: null,\n    color: itemColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), getPickerItems());\n};\n\nexport default RegionPicker;","map":{"version":3,"sources":["/Users/clinton/Apps/fc-reactnative/testapp/components/mainScreen/WatershedPicker.tsx"],"names":["React","Picker","useSelector","useDispatch","setWatershed","getWatershedSource","RegionPicker","props","pickerStyle","height","width","marginTop","marginBottom","style","undefined","itemColor","itemStyle","color","dispatch","region","state","waterdata","watershed","data","source","getPickerItems","regionSource","items","map","i","label","value","val"],"mappings":"AAAA;;;;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAwB,6BAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT;AACA,SAASC,kBAAT;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAE5B,MAAIC,WAAW,GAAG;AAACC,IAAAA,MAAM,EAAE,GAAT;AAAcC,IAAAA,KAAK,EAAE,MAArB;AAA6BC,IAAAA,SAAS,EAAE,EAAxC;AAA4CC,IAAAA,YAAY,EAAC;AAAzD,GAAlB;;AACA,MAAGL,KAAK,CAACM,KAAN,IAAeC,SAAlB,EAA4B;AACxBN,IAAAA,WAAW,GAAGD,KAAK,CAACM,KAApB;AACH;;AACD,MAAIE,SAAS,GAAG,SAAhB;;AACA,MAAGR,KAAK,CAACS,SAAN,IAAmBF,SAAnB,IAAgCP,KAAK,CAACS,SAAN,CAAgBC,KAAhB,IAAyBH,SAA5D,EAAsE;AAClEC,IAAAA,SAAS,GAAGR,KAAK,CAACS,SAAN,CAAgBC,KAA5B;AACH;;AAED,MAAMC,QAAQ,GAAGf,WAAW,EAA5B;AAEA,MAAIgB,MAAM,GAAGjB,WAAW,CAAC,UAAAkB,KAAK;AAAA,WAAIA,KAAK,CAACC,SAAN,CAAgBF,MAApB;AAAA,GAAN,CAAxB;AAAA,MACIG,SAAS,GAAGpB,WAAW,CAAC,UAAAkB,KAAK;AAAA,WAAIA,KAAK,CAACC,SAAN,CAAgBC,SAApB;AAAA,GAAN,CAD3B;AAAA,MAEIC,IAAI,GAAGrB,WAAW,CAAC,UAAAkB,KAAK;AAAA,WAAIA,KAAK,CAACC,SAAN,CAAgBG,MAApB;AAAA,GAAN,CAFtB;;AAQA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,QAAIC,YAAY,GAAGrB,kBAAkB,CAACkB,IAAI,CAACJ,MAAN,EAAcA,MAAd,CAArC;AAAA,QACIQ,KAAK,GAAGD,YAAY,CAACE,GAAb,CAAiB,UAACJ,MAAD,EAAQK,CAAR,EAAc;AACnC,aAAO,oBAAC,MAAD,CAAQ,IAAR;AAAa,QAAA,KAAK,EAAEL,MAAM,CAACM,KAA3B;AAAkC,QAAA,KAAK,EAAEN,MAAM,CAACO,KAAhD;AAAuD,QAAA,GAAG,EAAEF,CAA5D;AAA+D,QAAA,KAAK,EAAEd,SAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFO,CADZ;AAIA,WAAOY,KAAP;AACH,GAND;;AAYA,SACI,oBAAC,MAAD;AACI,IAAA,aAAa,EAAEL,SADnB;AAEI,IAAA,KAAK,EAAE;AAAEb,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,KAAK,EAAE;AAAtB,KAFX;AAGI,IAAA,SAAS,EAAE;AAACD,MAAAA,MAAM,EAAC;AAAR,KAHf;AAII,IAAA,aAAa,EAAE,uBAACuB,GAAD,EAAMH,CAAN,EAAY;AACvBX,MAAAA,QAAQ,CAACd,YAAY,CAAC4B,GAAD,CAAb,CAAR;AACH,KANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQI,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,0BAAnB;AAA8C,IAAA,KAAK,EAAE,IAArD;AAA2D,IAAA,KAAK,EAAEjB,SAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EASKU,cAAc,EATnB,CADJ;AAaH,CA9CD;;AAgDA,eAAenB,YAAf","sourcesContent":["\"use strict\";\n\nimport React from \"react\";\nimport { Picker } from  '@react-native-picker/picker';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setWatershed } from \"../../lib/store/actions/waterdata\";\nimport { getWatershedSource } from \"../../lib/helper/Helper\";\n\nconst RegionPicker = (props) => {\n\n    let pickerStyle = {height: 200, width: \"100%\", marginTop: 80, marginBottom:40};\n    if(props.style != undefined){\n        pickerStyle = props.style;\n    }\n    let itemColor = \"default\";\n    if(props.itemStyle != undefined && props.itemStyle.color != undefined){\n        itemColor = props.itemStyle.color;\n    }\n\n    const dispatch = useDispatch();\n\n    let region = useSelector(state => state.waterdata.region),\n        watershed = useSelector(state => state.waterdata.watershed),\n        data = useSelector(state => state.waterdata.source);\n\n    /**\n     * \n     * \n     */\n    const getPickerItems = () => {\n        let regionSource = getWatershedSource(data.region, region),\n            items = regionSource.map((source,i) => {\n                return <Picker.Item label={source.label} value={source.value} key={i} color={itemColor}/>\n            });\n        return items;\n    }\n\n    /**\n     * \n     * @return object\n     */\n    return (\n        <Picker\n            selectedValue={watershed}\n            style={{ height: 120, width: \"100%\" }}\n            itemStyle={{height:120}} \n            onValueChange={(val, i) => {\n                dispatch(setWatershed(val));\n            }}\n        >\n            <Picker.Item label=\"-- select a watershed --\" value={null} color={itemColor} />\n            {getPickerItems()}\n        </Picker>\n    );\n}\n\nexport default RegionPicker;"]},"metadata":{},"sourceType":"module"}