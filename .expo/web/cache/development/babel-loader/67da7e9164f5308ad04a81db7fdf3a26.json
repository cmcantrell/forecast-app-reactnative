{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/clinton/Apps/fc-reactnative/testapp/components/settingsScreen/InfoSettings.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Collapsible from 'react-native-collapsible';\nimport { Ionicons } from '@expo/vector-icons';\nimport styleConstants from \"../../assets/style-constants\";\n\nvar InfoSettings = function (_Component) {\n  _inherits(InfoSettings, _Component);\n\n  var _super = _createSuper(InfoSettings);\n\n  function InfoSettings(props) {\n    var _this;\n\n    _classCallCheck(this, InfoSettings);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isCollapsed: true\n    };\n\n    _this._componentWillMount();\n\n    return _this;\n  }\n\n  _createClass(InfoSettings, [{\n    key: \"_componentWillMount\",\n    value: function _componentWillMount() {}\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"setIsCollapsedHandler\",\n    value: function setIsCollapsedHandler(val) {\n      if (typeof val !== \"boolean\") {\n        val = false;\n      }\n\n      this.setState({\n        isCollapsed: val\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var collapsabelIconColor = styleConstants.fonts.bodyFontColor;\n\n      if (!this.state.isCollapsed) {\n        collapsabelIconColor = styleConstants.colors.medGrey;\n      }\n\n      return React.createElement(View, {\n        style: styles.settingGroup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.settingGroupHeader,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.settingGroupHeaderTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }, \"Info & FAQ\"), React.createElement(Ionicons, {\n        style: {\n          width: \"10%\",\n          marginTop: -6\n        },\n        name: \"add\",\n        size: 32,\n        color: collapsabelIconColor,\n        onPress: function onPress() {\n          var _isCollapsed;\n\n          if (_this2.state.isCollapsed == true) {\n            _isCollapsed = false;\n          } else {\n            _isCollapsed = true;\n          }\n\n          _this2.setIsCollapsedHandler(_isCollapsed);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      })), React.createElement(Collapsible, {\n        collapsed: this.state.isCollapsed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.settingGroupHeaderNote,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }, \"For support, contact support@forecastflyfishing.com.\", \"\\n\", \" You can also find more info at \", React.createElement(Text, {\n        style: {\n          color: styleConstants.colors.burntOrange\n        },\n        onPress: function onPress() {\n          return Linking.openURL('https://www.forecastflyfishing.com');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 155\n        }\n      }, \"ForecastFlyFishing.com\")), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.subtitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }\n      }, \"Waterdata Terminology\"), React.createElement(Text, {\n        style: styles.settingGroupHeaderNote,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      }, \"Water data is pulled from USGS & other State level resources. Below are some of the common status codes returned.\"), React.createElement(Text, {\n        style: styles.subtitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }\n      }, \"ft3/s - Cubic Feet per Second\"), React.createElement(Text, {\n        style: styles.settingGroupHeaderNote,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }, \"Used in guaging moving water: cubic feet of water flowing past a guaging point.\"), React.createElement(Text, {\n        style: styles.subtitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }\n      }, \"acft - Acre Feet\"), React.createElement(Text, {\n        style: styles.settingGroupHeaderNote,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }\n      }, \"Used in guaging impounded water: surface area of one acre, 1 foot deep.\"), React.createElement(Text, {\n        style: styles.subtitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }\n      }, \"Ssn - Seasonal\"), React.createElement(Text, {\n        style: styles.settingGroupHeaderNote,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }\n      }, \"These are seasonally operated guages, currently in the off-season.\"), React.createElement(Text, {\n        style: styles.subtitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, \"Bkw - Backwater\"), React.createElement(Text, {\n        style: styles.settingGroupHeaderNote,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }\n      }, \"Slow to non-moving water due to downstream ice conditions or blockage.\"), React.createElement(Text, {\n        style: styles.subtitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }\n      }, \"Ice - Ice Affected\"), React.createElement(Text, {\n        style: styles.settingGroupHeaderNote,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }\n      }, \"The guage is operational, but currently iced over.\"), React.createElement(Text, {\n        style: styles.subtitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }\n      }, \"Eqp - Technical Malfunction\"), React.createElement(Text, {\n        style: styles.settingGroupHeaderNote,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }\n      }, \"Equiptment malfunction has disrupted reading.\"))));\n    }\n  }]);\n\n  return InfoSettings;\n}(Component);\n\nexport default InfoSettings;\nvar styles = StyleSheet.create({\n  settingGroup: {\n    width: \"90%\",\n    borderBottomWidth: 1,\n    borderBottomColor: \"white\",\n    paddingBottom: 20,\n    marginBottom: 20\n  },\n  settingGroupHeader: {\n    flexDirection: \"row\"\n  },\n  settingGroupHeaderTitle: {\n    width: \"90%\",\n    fontFamily: styleConstants.fonts.headerFontFamily,\n    color: styleConstants.fonts.bodyFontColor,\n    fontSize: 21,\n    fontWeight: 'bold'\n  },\n  settingGroupHeaderNote: {\n    fontFamily: styleConstants.fonts.bodyFontFamily,\n    color: styleConstants.fonts.noteFontColor,\n    fontSize: 12,\n    marginTop: 0,\n    marginBottom: 20,\n    fontStyle: \"italic\",\n    lineHeight: 18,\n    marginLeft: 10,\n    marginRight: 10\n  },\n  subtitle: {\n    color: styleConstants.fonts.bodyFontColor,\n    fontSize: 16,\n    marginBottom: 10,\n    fontWeight: 'bold'\n  },\n  button: {\n    width: \"100%\",\n    alignSelf: 'stretch',\n    marginTop: 10,\n    paddingTop: 10,\n    paddingBottom: 10,\n    backgroundColor: styleConstants.colors.burntOrange,\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: styleConstants.fonts.bodyFontColor\n  },\n  buttonDanger: {\n    width: \"100%\",\n    alignSelf: 'stretch',\n    marginTop: 10,\n    paddingTop: 10,\n    paddingBottom: 10,\n    backgroundColor: styleConstants.colors.dangerRed,\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: styleConstants.fonts.bodyFontColor\n  },\n  buttonText: {\n    width: \"100%\",\n    color: styleConstants.fonts.bodyFontColor,\n    textAlign: 'center',\n    paddingLeft: 10,\n    paddingRight: 10,\n    fontFamily: styleConstants.headerFontFamily,\n    fontSize: 20\n  }\n});","map":{"version":3,"sources":["/Users/clinton/Apps/fc-reactnative/testapp/components/settingsScreen/InfoSettings.tsx"],"names":["React","Component","Collapsible","Ionicons","styleConstants","InfoSettings","props","state","isCollapsed","_componentWillMount","val","setState","collapsabelIconColor","fonts","bodyFontColor","colors","medGrey","styles","settingGroup","settingGroupHeader","settingGroupHeaderTitle","width","marginTop","_isCollapsed","setIsCollapsedHandler","settingGroupHeaderNote","color","burntOrange","Linking","openURL","subtitle","StyleSheet","create","borderBottomWidth","borderBottomColor","paddingBottom","marginBottom","flexDirection","fontFamily","headerFontFamily","fontSize","fontWeight","bodyFontFamily","noteFontColor","fontStyle","lineHeight","marginLeft","marginRight","button","alignSelf","paddingTop","backgroundColor","borderRadius","borderWidth","borderColor","buttonDanger","dangerRed","buttonText","textAlign","paddingLeft","paddingRight"],"mappings":"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","sourcesContent":["\"use strict\";\n\nimport React, { Component } from \"react\";\nimport { StyleSheet, Text, View, Linking } from \"react-native\";\nimport Collapsible from 'react-native-collapsible';\nimport { Ionicons } from '@expo/vector-icons';\nimport styleConstants from \"../../assets/style-constants\";\n\nclass InfoSettings extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isCollapsed: true\n        }\n        this._componentWillMount();\n    }\n\n    _componentWillMount() {\n\n    }\n\n    componentWillUnmount() {\n        // console.log(\"LocationSettings.componentWillUnmount()\");\n    }\n\n    setIsCollapsedHandler(val) {\n        if (typeof val !== \"boolean\") {\n            val = false;\n        }\n        this.setState({ isCollapsed: val });\n    }\n\n    render() {\n        /**\n         * display variables\n         */\n        let collapsabelIconColor = styleConstants.fonts.bodyFontColor;\n        if (!this.state.isCollapsed) {\n            collapsabelIconColor = styleConstants.colors.medGrey;\n        }\n        return (\n            <View style={styles.settingGroup}>\n                <View style={styles.settingGroupHeader}>\n                    <Text style={styles.settingGroupHeaderTitle}>Info & FAQ</Text>\n                    <Ionicons\n                        style={{ width: \"10%\", marginTop: -6 }}\n                        name=\"add\"\n                        size={32}\n                        color={collapsabelIconColor}\n                        onPress={() => {\n                            let _isCollapsed;\n                            if (this.state.isCollapsed == true) {\n                                _isCollapsed = false;\n                            } else {\n                                _isCollapsed = true;\n                            }\n                            this.setIsCollapsedHandler(_isCollapsed);\n                        }}\n                    />\n                </View>\n                <Collapsible collapsed={this.state.isCollapsed}>\n                    <Text style={styles.settingGroupHeaderNote}>For support, contact support@forecastflyfishing.com.{\"\\n\"} You can also find more info at <Text style={{color: styleConstants.colors.burntOrange}} onPress={() => Linking.openURL('https://www.forecastflyfishing.com')}>ForecastFlyFishing.com</Text></Text>\n                    <View>\n                        <Text style={styles.subtitle}>Waterdata Terminology</Text>\n                        <Text style={styles.settingGroupHeaderNote}>Water data is pulled from USGS & other State level resources. Below are some of the common status codes returned.</Text>\n                        <Text style={styles.subtitle}>ft3/s - Cubic Feet per Second</Text>\n                        <Text style={styles.settingGroupHeaderNote}>Used in guaging moving water: cubic feet of water flowing past a guaging point.</Text>\n                        <Text style={styles.subtitle}>acft - Acre Feet</Text>\n                        <Text style={styles.settingGroupHeaderNote}>Used in guaging impounded water: surface area of one acre, 1 foot deep.</Text>\n                        <Text style={styles.subtitle}>Ssn - Seasonal</Text>\n                        <Text style={styles.settingGroupHeaderNote}>These are seasonally operated guages, currently in the off-season.</Text>\n                        <Text style={styles.subtitle}>Bkw - Backwater</Text>\n                        <Text style={styles.settingGroupHeaderNote}>Slow to non-moving water due to downstream ice conditions or blockage.</Text>\n                        <Text style={styles.subtitle}>Ice - Ice Affected</Text>\n                        <Text style={styles.settingGroupHeaderNote}>The guage is operational, but currently iced over.</Text>\n                        <Text style={styles.subtitle}>Eqp - Technical Malfunction</Text>\n                        <Text style={styles.settingGroupHeaderNote}>Equiptment malfunction has disrupted reading.</Text>\n                    </View>\n                </Collapsible>\n            </View>\n        );\n    }\n\n}\nexport default InfoSettings;\n\nconst styles = StyleSheet.create({\n    settingGroup: {\n        width: \"90%\",\n        borderBottomWidth: 1,\n        borderBottomColor: \"white\",\n        paddingBottom: 20,\n        marginBottom: 20\n    },\n    settingGroupHeader: {\n        flexDirection: \"row\"\n    },\n    settingGroupHeaderTitle: {\n        width: \"90%\",\n        fontFamily: styleConstants.fonts.headerFontFamily,\n        color: styleConstants.fonts.bodyFontColor,\n        fontSize: 21,\n        fontWeight: 'bold'\n    },\n    settingGroupHeaderNote: {\n        fontFamily: styleConstants.fonts.bodyFontFamily,\n        color: styleConstants.fonts.noteFontColor,\n        fontSize: 12,\n        marginTop: 0,\n        marginBottom: 20,\n        fontStyle: \"italic\",\n        lineHeight: 18,\n        marginLeft: 10,\n        marginRight: 10,\n    },\n    subtitle: {\n        color: styleConstants.fonts.bodyFontColor,\n        fontSize: 16,\n        marginBottom:10,\n        fontWeight: 'bold',\n    },\n    button: {\n        width: \"100%\",\n        alignSelf: 'stretch',\n        marginTop: 10,\n        paddingTop: 10,\n        paddingBottom: 10,\n        backgroundColor: styleConstants.colors.burntOrange,\n        borderRadius: 10,\n        borderWidth: 1,\n        borderColor: styleConstants.fonts.bodyFontColor\n    },\n    buttonDanger: {\n        width: \"100%\",\n        alignSelf: 'stretch',\n        marginTop: 10,\n        paddingTop: 10,\n        paddingBottom: 10,\n        backgroundColor: styleConstants.colors.dangerRed,\n        borderRadius: 10,\n        borderWidth: 1,\n        borderColor: styleConstants.fonts.bodyFontColor\n    },\n    buttonText: {\n        width: \"100%\",\n        color: styleConstants.fonts.bodyFontColor,\n        textAlign: 'center',\n        paddingLeft: 10,\n        paddingRight: 10,\n        fontFamily: styleConstants.headerFontFamily,\n        fontSize: 20\n    }\n});"]},"metadata":{},"sourceType":"module"}