{"ast":null,"code":"\"use strict\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/clinton/Apps/fc-reactnative/testapp/components/mainScreen/WaterdataComponent.tsx\";\n\nimport React from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport WaterdataCard from \"./WaterdataCard\";\nimport { setRequestWaterdata } from \"../../lib/store/actions/waterdata\";\n\nvar WaterdataComponent = function WaterdataComponent() {\n  var dispatch = useDispatch();\n  var region = useSelector(function (state) {\n    return state.waterdata.region;\n  });\n  var watershed = useSelector(function (state) {\n    return state.waterdata.watershed;\n  });\n  var source = useSelector(function (state) {\n    return state.waterdata.source;\n  });\n\n  var getWatershedData = function getWatershedData() {\n    var data = source.region[region].watershed || {};\n    var _watershedData = {};\n\n    for (var key in data) {\n      if (data.hasOwnProperty(key)) {\n        if (data[key].name === watershed && typeof data[key].sites === \"object\") {\n          _watershedData = data[key].sites;\n        }\n      }\n    }\n\n    return _watershedData;\n  };\n\n  var getWaterdataInsts = function getWaterdataInsts() {\n    var watershedData = getWatershedData();\n    var _content = [],\n        i = 0;\n\n    for (var key in watershedData) {\n      if (watershedData.hasOwnProperty(key)) {\n        _content.push(React.createElement(WaterdataCard, {\n          key: i,\n          inst: i,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 31\n          }\n        }));\n\n        i++;\n        dispatch(setRequestWaterdata(watershedData));\n      }\n    }\n\n    ;\n    return _content;\n  };\n\n  return React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, getWaterdataInsts());\n};\n\nexport default WaterdataComponent;","map":{"version":3,"sources":["/Users/clinton/Apps/fc-reactnative/testapp/components/mainScreen/WaterdataComponent.tsx"],"names":["React","useSelector","useDispatch","WaterdataCard","setRequestWaterdata","WaterdataComponent","dispatch","region","state","waterdata","watershed","source","getWatershedData","data","_watershedData","key","hasOwnProperty","name","sites","getWaterdataInsts","watershedData","_content","i","push"],"mappings":"AAAA;;;;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,aAAP;AACA,SAASC,mBAAT;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAE7B,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,MAAMK,MAAM,GAAGN,WAAW,CAAC,UAAAO,KAAK;AAAA,WAAIA,KAAK,CAACC,SAAN,CAAgBF,MAApB;AAAA,GAAN,CAA1B;AACA,MAAMG,SAAS,GAAGT,WAAW,CAAC,UAAAO,KAAK;AAAA,WAAIA,KAAK,CAACC,SAAN,CAAgBC,SAApB;AAAA,GAAN,CAA7B;AACA,MAAMC,MAAM,GAAGV,WAAW,CAAC,UAAAO,KAAK;AAAA,WAAIA,KAAK,CAACC,SAAN,CAAgBE,MAApB;AAAA,GAAN,CAA1B;;AAMA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3B,QAAIC,IAAI,GAAGF,MAAM,CAACJ,MAAP,CAAcA,MAAd,EAAsBG,SAAtB,IAAmC,EAA9C;AACA,QAAII,cAAc,GAAG,EAArB;;AACA,SAAK,IAAIC,GAAT,IAAgBF,IAAhB,EAAsB;AAClB,UAAIA,IAAI,CAACG,cAAL,CAAoBD,GAApB,CAAJ,EAA8B;AAC1B,YAAIF,IAAI,CAACE,GAAD,CAAJ,CAAUE,IAAV,KAAmBP,SAAnB,IAAgC,OAAOG,IAAI,CAACE,GAAD,CAAJ,CAAUG,KAAjB,KAA2B,QAA/D,EAAyE;AACrEJ,UAAAA,cAAc,GAAGD,IAAI,CAACE,GAAD,CAAJ,CAAUG,KAA3B;AACH;AACJ;AACJ;;AACD,WAAOJ,cAAP;AACH,GAXD;;AAiBA,MAAMK,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC5B,QAAMC,aAAa,GAAGR,gBAAgB,EAAtC;AACA,QAAIS,QAAQ,GAAG,EAAf;AAAA,QACIC,CAAC,GAAG,CADR;;AAEA,SAAK,IAAIP,GAAT,IAAgBK,aAAhB,EAA+B;AAC3B,UAAIA,aAAa,CAACJ,cAAd,CAA6BD,GAA7B,CAAJ,EAAuC;AACnCM,QAAAA,QAAQ,CAACE,IAAT,CAAc,oBAAC,aAAD;AAAe,UAAA,GAAG,EAAED,CAApB;AAAuB,UAAA,IAAI,EAAEA,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;;AACAA,QAAAA,CAAC;AACDhB,QAAAA,QAAQ,CAACF,mBAAmB,CAACgB,aAAD,CAApB,CAAR;AACH;AACJ;;AAAA;AACD,WAAOC,QAAP;AACH,GAZD;;AAcA,SACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaF,iBAAiB,EAA9B,CADJ;AAGH,CA7CD;;AA8CA,eAAed,kBAAf","sourcesContent":["\"use strict\";\n\nimport React from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport WaterdataCard from \"./WaterdataCard\";\nimport { setRequestWaterdata } from \"../../lib/store/actions/waterdata\";\n\nconst WaterdataComponent = () => {\n\n    const dispatch = useDispatch();\n    const region = useSelector(state => state.waterdata.region);\n    const watershed = useSelector(state => state.waterdata.watershed);\n    const source = useSelector(state => state.waterdata.source);\n\n    /**\n     * \n     * \n     */\n    const getWatershedData = () => {\n        let data = source.region[region].watershed || {};\n        let _watershedData = {};\n        for (let key in data) {\n            if (data.hasOwnProperty(key)) {\n                if (data[key].name === watershed && typeof data[key].sites === \"object\") {\n                    _watershedData = data[key].sites;\n                }\n            }\n        }\n        return _watershedData;\n    };\n\n    /**\n     * \n     * \n     */\n    const getWaterdataInsts = () => {\n        const watershedData = getWatershedData();\n        let _content = [],\n            i = 0;\n        for (let key in watershedData) {\n            if (watershedData.hasOwnProperty(key)) {\n                _content.push(<WaterdataCard key={i} inst={i} />);\n                i++;\n                dispatch(setRequestWaterdata(watershedData));\n            }\n        };\n        return _content;\n    };\n\n    return (\n        <ScrollView>{getWaterdataInsts()}</ScrollView>\n    );\n}\nexport default WaterdataComponent;\n"]},"metadata":{},"sourceType":"module"}