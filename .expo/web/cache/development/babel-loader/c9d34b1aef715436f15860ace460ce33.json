{"ast":null,"code":"\"use strict\";\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/clinton/Apps/fc-reactnative/testapp/components/mainScreen/WaterdataCard.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useSelector } from \"react-redux\";\nimport Collapsible from 'react-native-collapsible';\nimport styleConstants from \"../../assets/style-constants\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { parseRequestParamsToString, parseWaterDataResponse } from \"../../lib/helper/ApiHelper\";\nimport { LineChart } from \"react-native-chart-kit\";\n\nvar WaterdataCard = function WaterdataCard(props) {\n  var requestWaterdata = useSelector(function (state) {\n    return state.waterdata.requestWaterdata[props.inst];\n  }) || {};\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      responseData = _useState2[0],\n      setResponseData = _useState2[1];\n\n  var name = requestWaterdata.name || \"\",\n      apiData = requestWaterdata.service || {};\n  var collapsabelIconColor = styleConstants.colors.burntOrange;\n  var navigation = useNavigation();\n\n  var apiRequest = function apiRequest() {\n    var time = Date.now();\n\n    if (Object.entries(responseData).length < 1) {\n      if (apiData.method == \"get\") {\n        var paramsString = parseRequestParamsToString(apiData.params);\n        return fetch(\"\" + apiData.url + paramsString, {\n          method: \"\" + apiData.method.toUpperCase()\n        }).then(function (response) {\n          response.json().then(function (j) {\n            var parsedData = parseWaterDataResponse(apiData, j),\n                responseData = {\n              currentMeasurementValue: null,\n              currentMeasurementType: null,\n              mapPoints: {},\n              _72HrPercentageChange: null\n            },\n                currentData = null;\n\n            if (typeof parsedData.map != \"function\") {\n              return setResponseData(responseData);\n            }\n\n            parsedData.map(function (d) {\n              if (Object.keys(d)[0] == \"_0hr\") {\n                currentData = d[Object.keys(d)[0]];\n                responseData.currentMeasurementValue = currentData.measurementValue;\n                responseData.currentMeasurementType = currentData.measurementType;\n              }\n\n              if (Object.keys(d)[0] == \"mapPoints\") {\n                responseData.mapPoints = d[Object.keys(d)[0]];\n              }\n\n              if (Object.keys(d)[0] == \"_72HrPercentageChange\") {\n                responseData._72HrPercentageChange = d[Object.keys(d)[0]];\n              }\n            });\n            setResponseData(responseData);\n          }).catch(function (err) {\n            setResponseData({\n              error: err,\n              request: apiData\n            });\n            console.log(err, apiData);\n          });\n        }).catch(function (err) {\n          setResponseData({\n            error: err,\n            request: apiData\n          });\n          console.log(err, apiData);\n        });\n      }\n    }\n  };\n\n  apiRequest();\n\n  var renderMeasurementData = function renderMeasurementData() {\n    if (responseData.currentMeasurementValue != undefined) {\n      if (typeof responseData.currentMeasurementValue == \"string\") {\n        return React.createElement(View, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 24\n          }\n        }, React.createElement(Text, {\n          style: styles.currentMeasurementValue,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 30\n          }\n        }, responseData.currentMeasurementValue));\n      } else if (typeof responseData.currentMeasurementValue == \"number\") {\n        if (responseData.currentMeasurementValue > 9999) {\n          responseData.currentMeasurementValue = \"\" + (responseData.currentMeasurementValue / 1000).toFixed(1);\n        }\n\n        var measurementType = responseData.currentMeasurementType;\n\n        if (measurementType == \"acft\") {\n          measurementType = \"Kacft\";\n        }\n\n        return React.createElement(View, {\n          style: styles.currentMeasurementContainer,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 24\n          }\n        }, React.createElement(Text, {\n          style: styles.currentMeasurementValue,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }\n        }, responseData.currentMeasurementValue), React.createElement(Text, {\n          style: styles.currentMeasurementType,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }\n        }, measurementType));\n      }\n    } else {\n      return React.createElement(View, {\n        style: styles.currentMeasurementContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.currentMeasurementValue,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }\n      }, \"NR\"));\n    }\n  };\n\n  var renderChangeData = function renderChangeData() {\n    if (!isNaN(responseData._72HrPercentageChange) && responseData._72HrPercentageChange !== null) {\n      var iconColor = getIconColor(responseData._72HrPercentageChange);\n      return React.createElement(View, {\n        style: styles.percentChangeContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 20\n        }\n      }, React.createElement(View, {\n        style: styles.percentTextContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: _objectSpread(_objectSpread({}, styles.percentIconText), {\n          color: iconColor\n        }),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 59\n        }\n      }, \"+/-\"), React.createElement(Text, {\n        style: styles.percentText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 138\n        }\n      }, responseData._72HrPercentageChange, \"%72hrs.\")));\n    } else if (responseData.currentMeasurementValue == undefined) {\n      return React.createElement(View, {\n        style: styles.percentChangeContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.percentTextContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: _objectSpread(_objectSpread({}, styles.percentText), styles.noReadingText),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 63\n        }\n      }, \"no read\")));\n    } else if (responseData.currentMeasurementValue == \"Ssn\") {\n      return React.createElement(View, {\n        style: styles.percentChangeContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.percentTextContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: _objectSpread(_objectSpread({}, styles.percentText), styles.noReadingText),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 63\n        }\n      }, \"Seasonal\")));\n    } else if (responseData.currentMeasurementValue == \"Bkw\") {\n      return React.createElement(View, {\n        style: styles.percentChangeContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.percentTextContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: _objectSpread(_objectSpread({}, styles.percentText), styles.noReadingText),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 63\n        }\n      }, \"Backwater\")));\n    }\n  };\n\n  var getIconColor = function getIconColor(intVal) {\n    intVal = Math.abs(intVal);\n\n    if (intVal < 10) {\n      return styleConstants.waterdataCards.colors.green;\n    } else if (intVal >= 10 && intVal < 20) {\n      return styleConstants.waterdataCards.colors.lightGreen;\n    } else if (intVal >= 20 && intVal < 30) {\n      return styleConstants.waterdataCards.colors.yellow;\n    } else if (intVal >= 40 && intVal < 50) {\n      return styleConstants.waterdataCards.colors.burntOrange;\n    } else if (intVal >= 50) {\n      return styleConstants.waterdataCards.colors.red;\n    }\n\n    return styleConstants.fonts.bodyFontColor;\n  };\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isCollapsed = _useState4[0],\n      setIsCollapsed = _useState4[1];\n\n  var setIsCollapsedHandler = function setIsCollapsedHandler(val) {\n    if (typeof val !== \"boolean\") {\n      val = false;\n    }\n\n    setIsCollapsed(val);\n  };\n\n  var renderCollapsableContent = function renderCollapsableContent() {\n    var _styles = styles.bottomViewContainer;\n\n    if (typeof responseData.mapPoints != \"object\" || responseData.mapPoints.constructor.name != \"Array\" || responseData.mapPoints.length <= 1) {\n      _styles = _objectSpread(_objectSpread({}, _styles), {\n        height: 100\n      });\n    }\n\n    var subtext = \"Values measured in \" + responseData.currentMeasurementType + \". Explanations for data terms can be found on the settings tab.\";\n\n    if (responseData.currentMeasurementValue == \"Ssn\") {\n      subtext = \"This is a Seasonally operated station, and is currently in the off-season.\";\n    }\n\n    return React.createElement(View, {\n      style: _styles,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }, getGraph(), React.createElement(Text, {\n      style: styles.graphSubText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, subtext));\n  };\n\n  var getGraph = function getGraph() {\n    if (typeof responseData.mapPoints == \"object\" && responseData.mapPoints.constructor.name == \"Array\" && responseData.mapPoints.length > 1) {\n      var labels = new Array();\n      var data = responseData.mapPoints.map(function (coords) {\n        var date = new Date(coords.date);\n        labels.push(date.getMonth() + 1 + \"/\" + date.getDate());\n\n        if (typeof coords.y == \"number\") {\n          return coords.y;\n        } else {\n          return 0;\n        }\n      }).reverse();\n      labels.reverse();\n      var graphWidth = Dimensions.get(\"window\").width - 20;\n      return React.createElement(LineChart, {\n        width: graphWidth,\n        height: graphWidth * 0.4,\n        style: {\n          marginTop: 5,\n          borderRadius: 1,\n          paddingBottom: 10\n        },\n        withShadow: false,\n        bezier: true,\n        chartConfig: {\n          backgroundColor: \"rgb(17,17,17)\",\n          backgroundGradientFrom: \"rgb(17,17,17)\",\n          backgroundGradientTo: \"rgb(17,17,17)\",\n          decimalPlaces: 0,\n          color: function color() {\n            var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.4;\n            return \"rgba(25,255,255,\" + opacity + \")\";\n          },\n          labelColor: function labelColor() {\n            var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.4;\n            return \"rgba(25,255,255,\" + opacity + \")\";\n          },\n          style: {\n            borderRadius: 1\n          },\n          propsForDots: {\n            r: 1,\n            strokeWidth: 1,\n            stroke: 'rgb(25,255,255)'\n          }\n        },\n        data: {\n          labels: labels,\n          datasets: [{\n            data: data\n          }]\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }\n      });\n    }\n  };\n\n  var getCollapsibleLink = function getCollapsibleLink() {\n    if (responseData.currentMeasurementValue != undefined) {\n      return React.createElement(Text, {\n        style: {\n          color: collapsabelIconColor,\n          fontSize: 18,\n          fontFamily: styleConstants.fonts.bodyFontFamily\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 17\n        }\n      }, \"expand\");\n    }\n  };\n\n  if (typeof responseData == \"object\" && Object.entries(responseData).length > 0) {\n    if (!isCollapsed) {\n      collapsabelIconColor = \"rgb(115,60,26)\";\n    }\n\n    return React.createElement(View, {\n      style: (styles.mainContainer, {\n        marginTop: 5\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.topViewContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.topLeftView,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }\n    }, React.createElement(View, {\n      style: styles.topLeftViewTextContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: styles.topLeftViewText,\n      ellipsizeMode: \"middle\",\n      numberOfLines: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 29\n      }\n    }, name.toUpperCase())), React.createElement(View, {\n      style: styles.buttonViewContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 25\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        var _isCollapsed;\n\n        if (isCollapsed === true) {\n          _isCollapsed = false;\n        } else {\n          _isCollapsed = true;\n        }\n\n        setIsCollapsedHandler(_isCollapsed);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 29\n      }\n    }, getCollapsibleLink()))), React.createElement(View, {\n      style: styles.topRightView,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 21\n      }\n    }, renderMeasurementData(), renderChangeData())), React.createElement(Collapsible, {\n      collapsed: isCollapsed,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }\n    }, renderCollapsableContent()), React.createElement(View, {\n      style: styles.borderView,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }\n    }));\n  } else {\n    return React.createElement(View, {\n      style: (styles.mainContainer, {\n        marginTop: 5\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.topViewContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.topLeftView,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 21\n      }\n    }, React.createElement(View, {\n      style: styles.topLeftViewTextContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: styles.topLeftViewText,\n      ellipsizeMode: \"middle\",\n      numberOfLines: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 29\n      }\n    }, name.toUpperCase())), React.createElement(View, {\n      style: styles.buttonViewContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"rgb(42,42,42)\",\n        fontSize: 16,\n        fontFamily: styleConstants.fonts.bodyFontFamily\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 29\n      }\n    }, \"loading... \"))), React.createElement(View, {\n      style: styles.topRightView,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 21\n      }\n    }, React.createElement(Ionicons, {\n      style: {\n        flexDirection: \"row\",\n        alignSelf: \"flex-end\",\n        marginTop: \"20%\",\n        marginRight: 20\n      },\n      name: \"ios-hourglass\",\n      size: 32,\n      color: \"rgb(42,42,42)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 25\n      }\n    }))), React.createElement(View, {\n      style: styles.borderView,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }\n    }));\n  }\n};\n\nvar padding = 10;\nvar topViewHeight = 100;\nvar textViewHeight = 55;\nvar buttonViewHeight = topViewHeight - padding * 2 - textViewHeight;\nvar bottomViewHeight = 275;\nvar styles = StyleSheet.create({\n  mainContainer: {\n    width: \"100%\",\n    height: styleConstants.waterdataCards.cardHeight,\n    flexDirection: \"column\"\n  },\n  topViewContainer: {\n    width: \"100%\",\n    height: topViewHeight,\n    flexDirection: \"row\"\n  },\n  topLeftView: {\n    width: \"67%\",\n    height: \"100%\",\n    paddingLeft: padding,\n    paddingRight: padding * 2,\n    justifyContent: \"flex-start\",\n    paddingTop: padding\n  },\n  topLeftViewText: {\n    color: styleConstants.fonts.bodyFontColor,\n    fontFamily: styleConstants.fonts.bodyFontFamily,\n    fontSize: 21,\n    textAlign: \"left\",\n    justifyContent: \"flex-start\"\n  },\n  topLeftViewTextContainer: {\n    height: textViewHeight,\n    width: \"100%\"\n  },\n  buttonViewContainer: {\n    width: \"100%\",\n    height: buttonViewHeight,\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n  topRightView: {\n    width: \"33%\",\n    height: \"100%\",\n    paddingRight: padding\n  },\n  currentMeasurementContainer: {\n    height: \"50%\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\"\n  },\n  currentMeasurementValue: {\n    alignSelf: \"flex-end\",\n    color: styleConstants.fonts.bodyFontColor,\n    fontFamily: styleConstants.fonts.headerFontFamily,\n    fontSize: 40,\n    textAlign: \"right\"\n  },\n  currentMeasurementType: {\n    alignSelf: \"flex-end\",\n    paddingBottom: 5,\n    color: styleConstants.fonts.bodyFontColor,\n    fontFamily: styleConstants.fonts.bodyFontFamily,\n    fontSize: 10\n  },\n  percentChangeContainer: {\n    height: \"50%\"\n  },\n  percentTextContainer: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    marginTop: 2\n  },\n  percentIconText: {\n    color: styleConstants.fonts.bodyFontColor,\n    fontFamily: styleConstants.fonts.headerFontFamily,\n    fontSize: 28,\n    textAlign: \"left\",\n    paddingRight: 2\n  },\n  percentText: {\n    color: styleConstants.fonts.bodyFontColor,\n    fontFamily: styleConstants.fonts.bodyFontFamily,\n    fontSize: 12,\n    lineHeight: 36\n  },\n  noReadingText: {\n    fontStyle: \"italic\",\n    color: styleConstants.colors.lightGrey\n  },\n  bottomViewContainer: {\n    width: \"100%\",\n    flexDirection: \"column\"\n  },\n  borderView: {\n    width: \"100%\",\n    height: styleConstants.borders.borderWidth,\n    borderTopColor: styleConstants.borders.borderColor,\n    borderTopWidth: styleConstants.borders.borderWidth\n  },\n  graphSubText: {\n    paddingLeft: padding,\n    paddingRight: padding,\n    marginBottom: 20,\n    fontSize: 11,\n    color: \"rgba(25,255,255,0.6)\",\n    textAlign: \"center\"\n  },\n  logsLink: {\n    color: \"white\",\n    paddingLeft: padding,\n    paddingRight: padding * 2,\n    paddingBottom: padding * 2,\n    fontSize: 18,\n    textAlign: \"center\"\n  }\n});\nexport default WaterdataCard;","map":{"version":3,"sources":["/Users/clinton/Apps/fc-reactnative/testapp/components/mainScreen/WaterdataCard.tsx"],"names":["React","useState","useNavigation","useSelector","Collapsible","styleConstants","Ionicons","parseRequestParamsToString","parseWaterDataResponse","LineChart","WaterdataCard","props","requestWaterdata","state","waterdata","inst","responseData","setResponseData","name","apiData","service","collapsabelIconColor","colors","burntOrange","navigation","apiRequest","time","Date","now","Object","entries","length","method","paramsString","params","fetch","url","toUpperCase","then","response","json","j","parsedData","currentMeasurementValue","currentMeasurementType","mapPoints","_72HrPercentageChange","currentData","map","d","keys","measurementValue","measurementType","catch","err","error","request","console","log","renderMeasurementData","undefined","styles","toFixed","currentMeasurementContainer","renderChangeData","isNaN","iconColor","getIconColor","percentChangeContainer","percentTextContainer","percentIconText","color","percentText","noReadingText","intVal","Math","abs","waterdataCards","green","lightGreen","yellow","red","fonts","bodyFontColor","isCollapsed","setIsCollapsed","setIsCollapsedHandler","val","renderCollapsableContent","_styles","bottomViewContainer","constructor","height","subtext","getGraph","graphSubText","labels","Array","data","coords","date","push","getMonth","getDate","y","reverse","graphWidth","Dimensions","get","width","marginTop","borderRadius","paddingBottom","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","opacity","labelColor","style","propsForDots","r","strokeWidth","stroke","datasets","getCollapsibleLink","fontSize","fontFamily","bodyFontFamily","mainContainer","topViewContainer","topLeftView","topLeftViewTextContainer","topLeftViewText","buttonViewContainer","_isCollapsed","topRightView","borderView","flexDirection","alignSelf","marginRight","padding","topViewHeight","textViewHeight","buttonViewHeight","bottomViewHeight","StyleSheet","create","cardHeight","paddingLeft","paddingRight","justifyContent","paddingTop","textAlign","headerFontFamily","lineHeight","fontStyle","lightGrey","borders","borderWidth","borderTopColor","borderColor","borderTopWidth","marginBottom","logsLink"],"mappings":"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","sourcesContent":["\"use strict\";\n\nimport React, { useState } from \"react\";\nimport { View, Text, StyleSheet, TouchableOpacity, Dimensions } from \"react-native\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useSelector } from \"react-redux\";\nimport Collapsible from 'react-native-collapsible';\nimport styleConstants from \"../../assets/style-constants\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { parseRequestParamsToString, parseWaterDataResponse } from \"../../lib/helper/ApiHelper\";\nimport { LineChart } from \"react-native-chart-kit\";\n\n\nconst WaterdataCard = (props) => {\n    const requestWaterdata = useSelector(state => state.waterdata.requestWaterdata[props.inst]) || {};\n    const [responseData, setResponseData] = useState({});\n\n    const name = requestWaterdata.name || \"\",\n        apiData = requestWaterdata.service || {};\n\n    let collapsabelIconColor = styleConstants.colors.burntOrange;\n\n    const navigation = useNavigation();\n\n    const apiRequest = () => {\n        const time = Date.now();\n        if (Object.entries(responseData).length < 1) {\n            if (apiData.method == \"get\") {\n                let paramsString = parseRequestParamsToString(apiData.params);\n                return fetch(`${apiData.url}${paramsString}`, {\n                    method: `${apiData.method.toUpperCase()}`\n                }).then((response) => {\n                    response.json().then((j) => {\n                        let parsedData = parseWaterDataResponse(apiData, j),\n                            responseData = {\n                                currentMeasurementValue: null,\n                                currentMeasurementType: null,\n                                mapPoints: {},\n                                _72HrPercentageChange: null\n                            },\n                            currentData = null;\n                        if(typeof parsedData.map != \"function\"){\n                            return setResponseData(responseData);\n                        }\n                        parsedData.map((d) => {\n                            // get current timesSeries\n                            if (Object.keys(d)[0] == \"_0hr\") {\n                                currentData = (d[Object.keys(d)[0]]);\n                                responseData.currentMeasurementValue = currentData.measurementValue;\n                                responseData.currentMeasurementType = currentData.measurementType;\n                            }\n                            if (Object.keys(d)[0] == \"mapPoints\") {\n                                responseData.mapPoints = (d[Object.keys(d)[0]]);\n                            }\n                            if (Object.keys(d)[0] == \"_72HrPercentageChange\") {\n                                responseData._72HrPercentageChange = (d[Object.keys(d)[0]]);\n                            }\n                        });\n                        setResponseData(responseData);\n                    }).catch((err) => {\n                        setResponseData({ error: err, request: apiData });\n                        console.log(err, apiData);\n                    });\n                }).catch((err) => {\n                    setResponseData({ error: err, request: apiData });\n                    console.log(err, apiData);\n                });\n            }\n        }\n    };\n    apiRequest();\n\n    const renderMeasurementData = () => {\n        if (responseData.currentMeasurementValue != undefined) {\n            if (typeof responseData.currentMeasurementValue == \"string\") {\n                return <View><Text style={styles.currentMeasurementValue}>{responseData.currentMeasurementValue}</Text></View>\n            } else if (typeof responseData.currentMeasurementValue == \"number\") {\n                if (responseData.currentMeasurementValue > 9999) {\n                    responseData.currentMeasurementValue = `${((responseData.currentMeasurementValue / 1000).toFixed(1))}`;\n                }\n                let measurementType = responseData.currentMeasurementType;\n                if(measurementType == \"acft\"){\n                    measurementType = \"Kacft\";\n                }\n                return <View style={styles.currentMeasurementContainer}>\n                    <Text style={styles.currentMeasurementValue}>{responseData.currentMeasurementValue}</Text>\n                    <Text style={styles.currentMeasurementType}>{measurementType}</Text>\n                </View>\n            }\n        } else {\n            return (\n                <View style={styles.currentMeasurementContainer}>\n                    <Text style={styles.currentMeasurementValue}>NR</Text>\n                </View>\n            );\n        }\n    };\n\n    const renderChangeData = () => {\n        if (!isNaN(responseData._72HrPercentageChange) && responseData._72HrPercentageChange !== null) {\n            let iconColor = getIconColor(responseData._72HrPercentageChange);\n            return <View style={styles.percentChangeContainer}>\n                <View style={styles.percentTextContainer}><Text style={{ ...styles.percentIconText, ...{ color: iconColor } }}>+/-</Text><Text style={styles.percentText}>{responseData._72HrPercentageChange}%72hrs.</Text></View>\n            </View>\n        }else if (responseData.currentMeasurementValue == undefined) {\n            return (\n                <View style={styles.percentChangeContainer}>\n                    <View style={styles.percentTextContainer}><Text style={{...styles.percentText, ...styles.noReadingText}}>no read</Text></View>\n                </View>\n            );\n        }else if(responseData.currentMeasurementValue == \"Ssn\"){\n            return (\n                <View style={styles.percentChangeContainer}>\n                    <View style={styles.percentTextContainer}><Text style={{...styles.percentText, ...styles.noReadingText}}>Seasonal</Text></View>\n                </View>\n            );\n        }else if(responseData.currentMeasurementValue == \"Bkw\"){\n            return (\n                <View style={styles.percentChangeContainer}>\n                    <View style={styles.percentTextContainer}><Text style={{...styles.percentText, ...styles.noReadingText}}>Backwater</Text></View>\n                </View>\n            );\n        }\n    };\n\n    const getIconColor = (intVal) => {\n        intVal = Math.abs(intVal);\n        if (intVal < 10) {\n            return styleConstants.waterdataCards.colors.green;\n        } else if (intVal >= 10 && intVal < 20) {\n            return styleConstants.waterdataCards.colors.lightGreen;\n        } else if (intVal >= 20 && intVal < 30) {\n            return styleConstants.waterdataCards.colors.yellow;\n        } else if (intVal >= 40 && intVal < 50) {\n            return styleConstants.waterdataCards.colors.burntOrange;\n        } else if (intVal >= 50) {\n            return styleConstants.waterdataCards.colors.red;\n        }\n        return styleConstants.fonts.bodyFontColor;\n    };\n\n    /**\n     * \n     */\n    const [isCollapsed, setIsCollapsed] = useState(true);\n    const setIsCollapsedHandler = (val) => {\n        if (typeof val !== \"boolean\") {\n            val = false;\n        }\n        setIsCollapsed(val);\n    };\n\n    /**\n     * \n     */\n    const renderCollapsableContent = () => {\n        let _styles = styles.bottomViewContainer;\n        if (typeof responseData.mapPoints != \"object\" || responseData.mapPoints.constructor.name != \"Array\" || responseData.mapPoints.length <= 1) {\n            _styles = {..._styles, ...{height:100}}\n        }\n        let subtext = `Values measured in ${responseData.currentMeasurementType}. Explanations for data terms can be found on the settings tab.`;\n        if(responseData.currentMeasurementValue == \"Ssn\"){\n            subtext = `This is a Seasonally operated station, and is currently in the off-season.`;\n        }\n        return (\n            <View style={_styles}>\n                {getGraph()}\n                <Text style={styles.graphSubText}>{subtext}</Text>\n            </View>\n        );\n    };\n\n    const getGraph = () => {\n        if (typeof responseData.mapPoints == \"object\" && responseData.mapPoints.constructor.name == \"Array\" && responseData.mapPoints.length > 1) {\n            const labels = new Array();\n            const data = responseData.mapPoints.map((coords) => {\n                let date = new Date(coords.date);\n                labels.push(`${date.getMonth() + 1}/${date.getDate()}`);\n                if (typeof coords.y == \"number\") {\n                    return coords.y;\n                } else {\n                    return 0;\n                }\n            }).reverse();\n            labels.reverse();\n            // let maxOffset = (Math.round(Math.ceil(...data)/100)*100) + 200;\n            // let minOffset = ((Math.round(Math.floor(...data)/100)*100) - 200) > 0 ? (Math.round(Math.min(...data)/100)*100) - 200 : 0;\n            let graphWidth = ((Dimensions.get(\"window\").width) - (20));\n            return (<LineChart\n                width={graphWidth}\n                height={((graphWidth) * 0.4)}\n                style={{ marginTop: 5, borderRadius: 1, paddingBottom: 10 }}\n                withShadow={false}\n                // withVerticalLabels={false} \n                // fromZero={true}\n                // yAxisSuffix={` ${responseData.currentMeasurementType || null}`}\n                bezier\n                chartConfig={{\n                    backgroundColor: \"rgb(17,17,17)\",\n                    backgroundGradientFrom: \"rgb(17,17,17)\",\n                    backgroundGradientTo: \"rgb(17,17,17)\",\n                    decimalPlaces: 0,\n                    color: (opacity = 0.4) => `rgba(25,255,255,${opacity})`,\n                    labelColor: (opacity = 0.4) => `rgba(25,255,255,${opacity})`,\n                    style: { borderRadius: 1 },\n                    propsForDots: { r: 1, strokeWidth: 1, stroke: 'rgb(25,255,255)' },\n                }}\n                data={{\n                    labels: labels,\n                    datasets: [{ data: data }]\n                }}\n\n            />);\n        }\n    };\n\n    const getCollapsibleLink = () => {\n        if (responseData.currentMeasurementValue != undefined) {\n            return(\n                <Text style={{ \n                    color: collapsabelIconColor, \n                    fontSize: 18, \n                    fontFamily: styleConstants.fonts.bodyFontFamily\n                }}>expand</Text>\n            ); \n        }\n    };\n\n    if (typeof responseData == \"object\" && Object.entries(responseData).length > 0) {\n        if (!isCollapsed) {\n            collapsabelIconColor = \"rgb(115,60,26)\";\n        }\n        return (\n            <View style={styles.mainContainer, { marginTop: 5 }}>\n                <View style={styles.topViewContainer}>\n                    <View style={styles.topLeftView}>\n                        <View style={styles.topLeftViewTextContainer}>\n                            <Text\n                                style={styles.topLeftViewText}\n                                ellipsizeMode=\"middle\"\n                                numberOfLines={2}\n                            >{name.toUpperCase()}</Text>\n                        </View>\n                        <View style={styles.buttonViewContainer}>\n                            <TouchableOpacity\n                                onPress={() => {\n                                    let _isCollapsed;\n                                    if (isCollapsed === true) {\n                                        _isCollapsed = false;\n                                    } else {\n                                        _isCollapsed = true;\n                                    }\n                                    setIsCollapsedHandler(_isCollapsed);\n                                }}\n                            >\n                                {getCollapsibleLink()}\n                            </TouchableOpacity>\n                        </View>\n                    </View>\n                    <View style={styles.topRightView}>\n                        {renderMeasurementData()}\n                        {renderChangeData()}\n                    </View>\n                </View>\n                <Collapsible collapsed={isCollapsed}>\n                    {renderCollapsableContent()}\n                    {/* <View>\n                        <TouchableOpacity \n                        onPress={(ugh) => {\n                            navigation.navigate(\"Logs\", { data: responseData });\n                        }}\n                        ><Text style={styles.logsLink}>Log Data</Text></TouchableOpacity>\n                    </View> */}\n                </Collapsible>\n                <View style={styles.borderView}></View>\n            </View>\n        );\n    } else {\n        return (\n            <View style={styles.mainContainer, { marginTop: 5 }}>\n                <View style={styles.topViewContainer}>\n                    <View style={styles.topLeftView}>\n                        <View style={styles.topLeftViewTextContainer}>\n                            <Text\n                                style={styles.topLeftViewText}\n                                ellipsizeMode=\"middle\"\n                                numberOfLines={2}\n                            >{name.toUpperCase()}</Text>\n                        </View>\n                        <View style={styles.buttonViewContainer}>\n                            <Text style={{ color: \"rgb(42,42,42)\", fontSize: 16, fontFamily: styleConstants.fonts.bodyFontFamily }}>loading... </Text>\n                        </View>\n                    </View>\n                    <View style={styles.topRightView}>\n                        <Ionicons\n                            style={{ flexDirection: \"row\", alignSelf: \"flex-end\", marginTop: \"20%\", marginRight: 20 }}\n                            name=\"ios-hourglass\"\n                            size={32} color={\"rgb(42,42,42)\"}\n                        />\n                    </View>\n                </View>\n                <View style={styles.borderView}></View>\n            </View>\n        );\n    }\n}\n\nconst padding = 10;\nconst topViewHeight = 100;\nconst textViewHeight = 55;\nconst buttonViewHeight = topViewHeight - (padding * 2) - textViewHeight;\nconst bottomViewHeight = 275;\n\nconst styles = StyleSheet.create({\n    mainContainer: {\n        width: \"100%\",\n        height: styleConstants.waterdataCards.cardHeight,\n        flexDirection: \"column\"\n    },\n    topViewContainer: {\n        width: \"100%\",\n        height: topViewHeight,\n        flexDirection: \"row\"\n    },\n    topLeftView: {\n        width: \"67%\",\n        height: \"100%\",\n        paddingLeft: padding,\n        paddingRight: (padding) * 2,\n        justifyContent: \"flex-start\",\n        paddingTop: padding,\n        // backgroundColor: \"rgb(50, 205, 50)\",\n    },\n    topLeftViewText: {\n        color: styleConstants.fonts.bodyFontColor,\n        fontFamily: styleConstants.fonts.bodyFontFamily,\n        fontSize: 21,\n        textAlign: \"left\",\n        justifyContent: \"flex-start\"\n    },\n    topLeftViewTextContainer: {\n        height: textViewHeight,\n        width: \"100%\",\n    },\n    buttonViewContainer: {\n        width: \"100%\",\n        height: buttonViewHeight,\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n    },\n    topRightView: {\n        width: \"33%\",\n        height: \"100%\",\n        paddingRight: padding,\n        // backgroundColor: \"rgb(160, 4, 152)\"\n    },\n    currentMeasurementContainer: {\n        height: \"50%\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-end\",\n        // backgroundColor: \"rgb(50, 205, 50)\",\n    },\n    currentMeasurementValue: {\n        alignSelf: \"flex-end\",\n        color: styleConstants.fonts.bodyFontColor,\n        fontFamily: styleConstants.fonts.headerFontFamily,\n        fontSize: 40,\n        textAlign: \"right\",\n        // backgroundColor: \"rgb(255,110,199)\"\n    },\n    currentMeasurementType: {\n        alignSelf: \"flex-end\",\n        paddingBottom: 5,\n        color: styleConstants.fonts.bodyFontColor,\n        fontFamily: styleConstants.fonts.bodyFontFamily,\n        fontSize: 10,\n        // backgroundColor: \"rgb(160, 4, 152)\",\n    },\n    percentChangeContainer: {\n        height: \"50%\",\n        // backgroundColor: \"rgb(160, 4, 152)\"\n    },\n    percentTextContainer: {\n        width: \"100%\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-end\",\n        marginTop: 2,\n        // backgroundColor: \"rgb(160, 4, 152)\"\n    },\n    percentIconText: {\n        color: styleConstants.fonts.bodyFontColor,\n        fontFamily: styleConstants.fonts.headerFontFamily,\n        fontSize: 28,\n        textAlign: \"left\",\n        paddingRight: 2\n    },\n    percentText: {\n        color: styleConstants.fonts.bodyFontColor,\n        fontFamily: styleConstants.fonts.bodyFontFamily,\n        fontSize: 12,\n        lineHeight: 36\n    },\n    noReadingText:{\n        fontStyle:\"italic\",\n        color:styleConstants.colors.lightGrey\n    },\n    bottomViewContainer: {\n        width: \"100%\",\n        // height: bottomViewHeight,\n        // paddingBottom: (padding),\n        flexDirection: \"column\",\n        // backgroundColor: \"rgb(90,50,40)\"\n    },\n    borderView: {\n        width: \"100%\",\n        height: styleConstants.borders.borderWidth,\n        borderTopColor: styleConstants.borders.borderColor,\n        borderTopWidth: styleConstants.borders.borderWidth\n    },\n    graphSubText:{\n        paddingLeft: padding,\n        paddingRight: padding,\n        marginBottom: 20,\n        fontSize: 11,\n        color: \"rgba(25,255,255,0.6)\",\n        textAlign: \"center\"\n    },\n    logsLink: {\n        color:\"white\",\n        paddingLeft:padding,\n        paddingRight: padding * 2,\n        paddingBottom: padding * 2,\n        fontSize:18,\n        textAlign:\"center\"\n    }\n});\n\nexport default WaterdataCard;\n"]},"metadata":{},"sourceType":"module"}