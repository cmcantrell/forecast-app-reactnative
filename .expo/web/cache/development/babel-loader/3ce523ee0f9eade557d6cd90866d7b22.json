{"ast":null,"code":"\"use strict\";\n\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { percentageChangeOver72 } from \"./Helper\";\nexport var parseUSGS = function parseUSGS(data) {\n  try {\n    var unitType = data.value.timeSeries[0].variable.unit.unitCode || null;\n\n    if (data.value.timeSeries[0].values[0].value.constructor.name == \"Array\") {\n      var timeSeries = data.value.timeSeries[0].values[0].value;\n      var streamflowData = [{\n        _0hr: timeSeries[timeSeries.length - 1] || 0\n      }, {\n        _24hr: timeSeries[timeSeries.length - (96 + 1)] || 0\n      }, {\n        _48hr: timeSeries[timeSeries.length - (96 * 2 + 1)] || 0\n      }, {\n        _72hr: timeSeries[timeSeries.length - 96 * 3 + 1] || 0\n      }, {\n        _96hr: timeSeries[timeSeries.length - 96 * 4 + 1] || 0\n      }, {\n        _120hr: timeSeries[timeSeries.length - 96 * 5 + 1] || 0\n      }, {\n        _144hr: timeSeries[timeSeries.length - 96 * 6 + 1] || 0\n      }];\n      var mapPoints = [],\n          _72HrMapPoints = [];\n      var parsedStreamflowData = streamflowData.map(function (streamflow) {\n        var parsedData = {},\n            paramExceptions = [\"--\", \"Bkw\", \"Dry\", \"Eqp\", \"Ice\", \"Rat\", \"Ssn\"];\n\n        var _loop = function _loop(key, val) {\n          if (typeof val != \"object\") {\n            return \"continue\";\n          }\n\n          var measurementValue = null,\n              measurementType = unitType,\n              measurementTime = val.dateTime || null;\n          val.qualifiers.map(function (q) {\n            if (paramExceptions.indexOf(q) >= 0) {\n              measurementValue = q;\n            } else {\n              measurementValue = parseInt(val.value, 10);\n            }\n          });\n          parsedData[key] = {\n            \"measurementTime\": measurementTime,\n            \"measurementValue\": measurementValue,\n            \"measurementType\": measurementType\n          };\n          mapPoints.push({\n            x: mapPoints.length,\n            y: measurementValue,\n            date: measurementTime\n          });\n\n          if (_72HrMapPoints.length < 4) {\n            _72HrMapPoints.push({\n              x: _72HrMapPoints.length,\n              y: measurementValue\n            });\n          }\n        };\n\n        for (var _i = 0, _Object$entries = Object.entries(streamflow); _i < _Object$entries.length; _i++) {\n          var _ref = _Object$entries[_i];\n\n          var _ref2 = _slicedToArray(_ref, 2);\n\n          var key = _ref2[0];\n          var val = _ref2[1];\n\n          var _ret = _loop(key, val);\n\n          if (_ret === \"continue\") continue;\n        }\n\n        return parsedData;\n      });\n      parsedStreamflowData.push({\n        \"mapPoints\": mapPoints\n      });\n      parsedStreamflowData.push({\n        \"_72HrPercentageChange\": percentageChangeOver72(_72HrMapPoints)\n      });\n      return parsedStreamflowData;\n    }\n  } catch (e) {\n    console.log(\"Exception @USGSHelper.parseUSGS\", e);\n    return [];\n  }\n};","map":{"version":3,"sources":["/Users/clinton/Apps/fc-reactnative/testapp/lib/helper/USGSHelper.js"],"names":["percentageChangeOver72","parseUSGS","data","unitType","value","timeSeries","variable","unit","unitCode","values","constructor","name","streamflowData","_0hr","length","_24hr","_48hr","_72hr","_96hr","_120hr","_144hr","mapPoints","_72HrMapPoints","parsedStreamflowData","map","streamflow","parsedData","paramExceptions","key","val","measurementValue","measurementType","measurementTime","dateTime","qualifiers","q","indexOf","parseInt","push","x","y","date","Object","entries","e","console","log"],"mappings":"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","sourcesContent":["\"use strict\";\n\nimport {percentageChangeOver72} from \"./Helper\";\n\nexport const parseUSGS = (data) => {\n    try {\n        const unitType = data.value.timeSeries[0].variable.unit.unitCode || null;\n        if (data.value.timeSeries[0].values[0].value.constructor.name == \"Array\") {\n            const timeSeries = data.value.timeSeries[0].values[0].value;\n            let streamflowData = [\n                { _0hr: timeSeries[(timeSeries.length - 1)] || 0 },\n                { _24hr: timeSeries[timeSeries.length - (96 + 1)] || 0 },\n                { _48hr: timeSeries[timeSeries.length - ((96 * 2) + 1)] || 0 },\n                { _72hr: timeSeries[timeSeries.length - (96 * 3) + 1] || 0 },\n                { _96hr: timeSeries[timeSeries.length - (96 * 4) + 1] || 0 },\n                { _120hr: timeSeries[timeSeries.length - (96 * 5) + 1] || 0 },\n                { _144hr: timeSeries[timeSeries.length - (96 * 6) + 1] || 0 }\n            ];\n            let mapPoints = [],\n                _72HrMapPoints = [];\n            let parsedStreamflowData = streamflowData.map((streamflow) => {\n                let parsedData = {},\n                    paramExceptions = [\"--\", \"Bkw\", \"Dry\", \"Eqp\", \"Ice\", \"Rat\", \"Ssn\"];\n                for (let [key, val] of Object.entries(streamflow)) {\n                    if (typeof val != \"object\") {\n                        // console.log(\"ABORT\",val.constructor.name);\n                        continue;\n                        // throw `streamflowData[${key}] is not an object: ${data.value.timeSeries[0].sourceInfo.siteName}`;\n                    }\n                    // console.log(val);\n                    let measurementValue = null,\n                        measurementType = unitType,\n                        measurementTime = val.dateTime || null;\n                    val.qualifiers.map((q) => {\n                        if (paramExceptions.indexOf(q) >= 0) {\n                            measurementValue = q;\n                        } else {\n                            measurementValue = parseInt(val.value, 10);\n                        }\n                    });\n                    parsedData[key] = {\n                        \"measurementTime\": measurementTime,\n                        \"measurementValue\": measurementValue,\n                        \"measurementType\": measurementType\n                    };\n\n                    /**\n                     * @mapPoints\n                     * build add map points for graph\n                     */\n                    mapPoints.push({ x: mapPoints.length, y: measurementValue, date: measurementTime });\n                    /**\n                     * @_72HrMapPoints\n                     * build out 72 hour map points to find rate change\n                     */\n                    if (_72HrMapPoints.length < 4) {\n                        _72HrMapPoints.push({ x: _72HrMapPoints.length, y: measurementValue });\n                    }\n                }\n                // console.log(\"parsedData\",parsedData);\n                return parsedData;\n            });\n            // add map points for graph\n            parsedStreamflowData.push({ \"mapPoints\": mapPoints });\n            // build out rate change from @_72HrMapPoints and add to return\n            parsedStreamflowData.push({ \"_72HrPercentageChange\": percentageChangeOver72(_72HrMapPoints) });\n            return parsedStreamflowData;\n        }\n    }\n    catch (e) {\n        console.log(\"Exception @USGSHelper.parseUSGS\", e);\n        return [];\n    }\n};\n\n/*\n(1 * 24 * 4) = 96 * 3 = 216\n*/"]},"metadata":{},"sourceType":"module"}