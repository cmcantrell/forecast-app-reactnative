{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/clinton/Apps/fc-reactnative/testapp/navigation/BottomTabNavigator.tsx\";\nimport * as React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Ionicons } from '@expo/vector-icons';\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport MainScreen from \"../screens/MainScreen\";\nimport SettingsScreen from \"../screens/SettingsScreen\";\nimport styleConstants from \"../assets/style-constants\";\nvar BottomTab = createBottomTabNavigator();\nexport default function BottomTabNavigator() {\n  var _this = this;\n\n  var colorScheme = useColorScheme();\n  return React.createElement(BottomTab.Navigator, {\n    initialRouteName: \"Home\",\n    tabBarOptions: {\n      activeTintColor: styleConstants.colors.burntOrange,\n      inactiveTintColor: styleConstants.fonts.bodyFontColor,\n      inactiveBackgroundColor: styleConstants.colors.darkGrey,\n      activeBackgroundColor: styleConstants.colors.darkGrey,\n      showLabel: false,\n      style: {\n        backgroundColor: styleConstants.colors.darkGrey\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, React.createElement(BottomTab.Screen, {\n    name: \"Home\",\n    component: MainScreenNavigator,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref) {\n        var color = _ref.color;\n        return React.createElement(TabBarIcon, {\n          name: \"md-home\",\n          color: color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 38\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"Settings\",\n    component: SettingsScreenNavigator,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color;\n        return React.createElement(TabBarIcon, {\n          name: \"ios-settings\",\n          color: color,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 38\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction TabBarIcon(props) {\n  return React.createElement(Ionicons, _extends({\n    size: 32,\n    style: {\n      marginBottom: -3,\n      height: 32\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 10\n    }\n  }));\n}\n\nvar TabOneStack = createStackNavigator();\n\nfunction MainScreenNavigator() {\n  return React.createElement(TabOneStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, React.createElement(TabOneStack.Screen, {\n    name: \"Home\",\n    component: MainScreen,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar TabTwoStack = createStackNavigator();\n\nfunction SettingsScreenNavigator() {\n  return React.createElement(TabTwoStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, React.createElement(TabTwoStack.Screen, {\n    name: \"Settings\",\n    component: SettingsScreen,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/clinton/Apps/fc-reactnative/testapp/navigation/BottomTabNavigator.tsx"],"names":["React","createBottomTabNavigator","createStackNavigator","Ionicons","useColorScheme","MainScreen","SettingsScreen","styleConstants","BottomTab","BottomTabNavigator","colorScheme","activeTintColor","colors","burntOrange","inactiveTintColor","fonts","bodyFontColor","inactiveBackgroundColor","darkGrey","activeBackgroundColor","showLabel","style","backgroundColor","MainScreenNavigator","tabBarIcon","color","SettingsScreenNavigator","TabBarIcon","props","marginBottom","height","TabOneStack","headerShown","TabTwoStack"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Ionicons } from '@expo/vector-icons';\nimport useColorScheme from '../hooks/useColorScheme';\nimport MainScreen from '../screens/MainScreen';\nimport SettingsScreen from '../screens/SettingsScreen';\nimport { BottomTabParamList, TabOneParamList, TabTwoParamList } from '../types';\nimport styleConstants from \"../assets/style-constants\";\n\nconst BottomTab = createBottomTabNavigator<BottomTabParamList>();\n\nexport default function BottomTabNavigator() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <BottomTab.Navigator \n      initialRouteName=\"Home\" \n      tabBarOptions={{\n        activeTintColor: styleConstants.colors.burntOrange,\n        inactiveTintColor: styleConstants.fonts.bodyFontColor,\n        inactiveBackgroundColor: styleConstants.colors.darkGrey,\n        activeBackgroundColor: styleConstants.colors.darkGrey,\n        showLabel: false,\n        style: {\n            backgroundColor: styleConstants.colors.darkGrey\n        }\n    }} >\n      <BottomTab.Screen\n        name=\"Home\"\n        component={MainScreenNavigator}\n        options={{\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"md-home\" color={color} />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Settings\"\n        component={SettingsScreenNavigator}\n        options={{\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"ios-settings\" color={color} />,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\n// You can explore the built-in icon families and icons on the web at:\n// https://icons.expo.fyi/\nfunction TabBarIcon(props: { name: string; color: string }) {\n  return <Ionicons size={32} style={{ marginBottom: -3, height: 32 }} {...props} />;\n}\n\n// Each tab has its own navigation stack, you can read more about this pattern here:\n// https://reactnavigation.org/docs/tab-based-navigation#a-stack-navigator-for-each-tab\nconst TabOneStack = createStackNavigator<TabOneParamList>();\n\nfunction MainScreenNavigator() {\n  return (\n    <TabOneStack.Navigator>\n      <TabOneStack.Screen\n        name=\"Home\"\n        component={MainScreen}\n        options={{headerShown: false}}\n      />\n    </TabOneStack.Navigator>\n  );\n}\n\nconst TabTwoStack = createStackNavigator<TabTwoParamList>();\n\nfunction SettingsScreenNavigator() {\n  return (\n    <TabTwoStack.Navigator>\n      <TabTwoStack.Screen\n        name=\"Settings\"\n        component={SettingsScreen}\n        options={{headerShown: false}}\n      />\n    </TabTwoStack.Navigator>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}